/*
*******************************************************************************
*   Ledger App Security Key
*   (c) 2022 Ledger
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
*   Unless required by applicable law or agreed to in writing, software
*   distributed under the License is distributed on an "AS IS" BASIS,
*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*   limitations under the License.
********************************************************************************/

/******************************************/
/*             NANOS TARGET               */
/******************************************/

/* U2F PROD env */
#if defined(PROD_U2F_NANOS_PRIVATE_KEY)
static const uint8_t PROD_U2F_NANOS_ATTESTATION_KEY[] = {PROD_U2F_NANOS_PRIVATE_KEY};
#endif

static const uint8_t PROD_U2F_NANOS_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xd1, 0x30, 0x82, 0x01, 0x77, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xd3, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x33, 0x31, 0x30,
    0x33, 0x33, 0x30, 0x39, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x30, 0x33,
    0x33, 0x30, 0x39, 0x5a, 0x30, 0x75, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x28, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x53,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
    0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06,
    0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x14, 0x14, 0x31, 0x3e, 0xc6, 0x60, 0x7b, 0x00, 0x98, 0x43,
    0xf5, 0x89, 0xad, 0xaa, 0x3a, 0x24, 0xd9, 0x16, 0xdf, 0xc4, 0x98, 0x6f, 0x8a, 0x99, 0x57, 0xba,
    0xeb, 0x0a, 0xa5, 0x16, 0x8c, 0x68, 0x61, 0x56, 0x9a, 0x9e, 0xa8, 0xb8, 0xa7, 0x9a, 0x53, 0x56,
    0x9b, 0xee, 0xb5, 0x71, 0x29, 0xe4, 0x62, 0x9b, 0xba, 0x56, 0x10, 0x4f, 0x61, 0xa5, 0xc0, 0xb3,
    0x7d, 0x01, 0x73, 0x1c, 0xae, 0xc3, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b, 0x06,
    0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x05, 0x20, 0x30,
    0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45,
    0x02, 0x21, 0x00, 0xaf, 0x7c, 0x05, 0x77, 0xde, 0xba, 0x3c, 0x7d, 0x90, 0xc3, 0x20, 0xb3, 0xfa,
    0x5d, 0xa3, 0xdc, 0xbd, 0xec, 0x2e, 0xab, 0xa6, 0xae, 0x88, 0x8a, 0x9d, 0x67, 0x51, 0x12, 0x7f,
    0x1e, 0x70, 0xb6, 0x02, 0x20, 0x21, 0x64, 0xcc, 0x8d, 0xff, 0x91, 0xee, 0x11, 0xfa, 0x6a, 0x95,
    0x8a, 0xae, 0x2b, 0x88, 0x6f, 0x88, 0xad, 0xeb, 0xc8, 0x5e, 0xb3, 0xf4, 0x33, 0x09, 0x1a, 0x3e,
    0x93, 0x65, 0x88, 0x95, 0x81};

/* FIDO2 PROD env */
#if defined(PROD_FIDO2_NANOS_PRIVATE_KEY)
static const uint8_t PROD_FIDO2_NANOS_ATTESTATION_KEY[] = {PROD_FIDO2_NANOS_PRIVATE_KEY};
#endif

static const uint8_t PROD_FIDO2_NANOS_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xed, 0x30, 0x82, 0x01, 0x93, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xcf, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x33, 0x31, 0x30,
    0x33, 0x33, 0x30, 0x38, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x30, 0x33,
    0x33, 0x30, 0x38, 0x5a, 0x30, 0x75, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x28, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x53,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
    0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06,
    0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xaa, 0xda, 0x65, 0xba, 0x37, 0xe5, 0x41, 0x6d, 0x93, 0x42,
    0x97, 0x71, 0xc3, 0x4e, 0x4b, 0x2f, 0x6a, 0x78, 0x5d, 0xfe, 0x49, 0xf5, 0x45, 0x6c, 0x1d, 0xf7,
    0x5f, 0x2c, 0x65, 0x47, 0x20, 0xb4, 0x11, 0x0a, 0x28, 0x38, 0x53, 0xee, 0xf2, 0x54, 0x0b, 0xa5,
    0x6e, 0x93, 0xe6, 0x85, 0x66, 0x7e, 0x9c, 0x88, 0x49, 0x90, 0xc9, 0xb2, 0x4c, 0xa9, 0x41, 0xb7,
    0x63, 0x1c, 0x12, 0xea, 0x62, 0xbe, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b, 0x06,
    0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0x34, 0x1e, 0x4d,
    0xa9, 0x3c, 0x2e, 0x81, 0x03, 0x5a, 0x9f, 0xaa, 0xd8, 0x87, 0x13, 0x52, 0x00, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xcc,
    0x1c, 0x15, 0xaf, 0xf2, 0x34, 0x32, 0x81, 0x48, 0x56, 0xf1, 0x8e, 0x1a, 0x34, 0x90, 0xf8, 0xd5,
    0x35, 0x2f, 0x90, 0x72, 0x82, 0x94, 0x3c, 0x4a, 0x0e, 0x5d, 0x28, 0xb2, 0x81, 0x36, 0xf8, 0x02,
    0x20, 0x19, 0xb6, 0x63, 0x57, 0x2c, 0x6d, 0x85, 0xee, 0xf3, 0xe7, 0x0b, 0x7f, 0x38, 0x6e, 0xa4,
    0x08, 0x22, 0x44, 0xb1, 0x3e, 0xfd, 0x00, 0x71, 0x17, 0x7d, 0xa1, 0x51, 0x3a, 0x76, 0x79, 0x94,
    0xea};

/* U2F TEST env */
static const uint8_t TEST_U2F_NANOS_ATTESTATION_KEY[] = {
    0x69, 0xd2, 0x47, 0xe9, 0x4f, 0xd6, 0x3b, 0x8e, 0x34, 0x14, 0xb7, 0xac, 0x6b, 0xc5, 0xfb, 0xba,
    0x51, 0xd9, 0x68, 0x96, 0xc1, 0x2d, 0x2d, 0xf8, 0xb0, 0x9d, 0x39, 0xeb, 0x2a, 0x0f, 0x54, 0x0c};
static const uint8_t TEST_U2F_NANOS_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xd0, 0x30, 0x82, 0x01, 0x77, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xca, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x33,
    0x35, 0x34, 0x34, 0x33, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x31, 0x37, 0x31, 0x33, 0x35,
    0x34, 0x34, 0x33, 0x5a, 0x30, 0x75, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x28, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x53,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
    0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06,
    0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x12, 0x1f, 0xab, 0xde, 0xdb, 0xf8, 0x99, 0xd9, 0x23, 0x33,
    0x77, 0x9e, 0x6f, 0xd4, 0xcd, 0xce, 0x7f, 0xb3, 0xfa, 0xb2, 0x63, 0x99, 0xa1, 0x0b, 0xc4, 0xcc,
    0xfe, 0xa2, 0xe9, 0x1c, 0x2f, 0x04, 0x12, 0xfa, 0xc0, 0x7a, 0x18, 0x46, 0x65, 0xc5, 0x97, 0xa8,
    0x34, 0x36, 0x58, 0x72, 0x09, 0x59, 0xe2, 0x75, 0xf2, 0x53, 0x38, 0x8c, 0xdf, 0x68, 0x75, 0x63,
    0x91, 0x6c, 0xf1, 0xc5, 0xd1, 0x17, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b, 0x06,
    0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x05, 0x20, 0x30,
    0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47, 0x00, 0x30, 0x44,
    0x02, 0x20, 0x1c, 0xc2, 0xae, 0xf4, 0x33, 0xbb, 0xa1, 0xcc, 0x17, 0x04, 0x52, 0x3e, 0xae, 0x30,
    0x8d, 0x14, 0x23, 0xe2, 0xe5, 0x84, 0xa4, 0xb3, 0xa4, 0xf9, 0x41, 0xe9, 0x46, 0x8b, 0x89, 0x3e,
    0xeb, 0x11, 0x02, 0x20, 0x46, 0xbe, 0xa3, 0x50, 0xc4, 0xbe, 0x33, 0x43, 0x7c, 0x50, 0x9a, 0x7d,
    0x51, 0x31, 0xcf, 0xed, 0x29, 0x3a, 0x12, 0xe9, 0x64, 0xb0, 0xec, 0x10, 0xaa, 0xc3, 0x96, 0x16,
    0x55, 0x2f, 0x45, 0x85};

/* FIDO2 TEST env */
static const uint8_t TEST_FIDO2_NANOS_ATTESTATION_KEY[] = {
    0x81, 0x29, 0xf3, 0xd1, 0x09, 0x9a, 0xea, 0x63, 0x39, 0x0d, 0x54, 0x08, 0xc4, 0x53, 0xa4, 0x10,
    0x89, 0xf8, 0xf1, 0x58, 0x12, 0x4f, 0x2a, 0xf5, 0x23, 0xf3, 0x1d, 0x8d, 0x28, 0xce, 0xa6, 0xc9};
static const uint8_t TEST_FIDO2_NANOS_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xed, 0x30, 0x82, 0x01, 0x93, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xc7, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x32, 0x30, 0x39, 0x32, 0x36, 0x30, 0x38,
    0x30, 0x36, 0x30, 0x32, 0x5a, 0x17, 0x0d, 0x33, 0x32, 0x30, 0x39, 0x32, 0x33, 0x30, 0x38, 0x30,
    0x36, 0x30, 0x32, 0x5a, 0x30, 0x75, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x28, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x53,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
    0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06,
    0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x98, 0x67, 0x73, 0x56, 0x53, 0xa0, 0x69, 0xc5, 0x17, 0xec,
    0x6e, 0x2f, 0x98, 0x71, 0x07, 0xa3, 0x8b, 0x27, 0xdb, 0x5f, 0x03, 0x64, 0xdf, 0x15, 0x31, 0x10,
    0xc5, 0x20, 0x8c, 0x43, 0xb8, 0x38, 0xc5, 0x1b, 0xfb, 0xed, 0x22, 0x4d, 0x56, 0x10, 0x5c, 0x93,
    0x53, 0x19, 0x00, 0xb3, 0xdc, 0xe8, 0x80, 0x0d, 0x4b, 0x4e, 0x13, 0x43, 0x6e, 0x98, 0x5f, 0x24,
    0x52, 0x3d, 0x37, 0xb5, 0xca, 0x7c, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b, 0x06,
    0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0x34, 0x1e, 0x4d,
    0xa9, 0x3c, 0x2e, 0x81, 0x03, 0x5a, 0x9f, 0xaa, 0xd8, 0x87, 0x13, 0x52, 0x00, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xed,
    0xb6, 0xe3, 0xf6, 0xcd, 0x2a, 0x49, 0xf6, 0xb1, 0x7b, 0x72, 0xf3, 0x6e, 0x00, 0x7a, 0x67, 0xd9,
    0xf3, 0x59, 0x8b, 0xcc, 0xb3, 0xf4, 0x17, 0xe6, 0x34, 0x5b, 0x9d, 0x05, 0x62, 0x08, 0x89, 0x02,
    0x20, 0x62, 0x68, 0xcd, 0xf6, 0x59, 0xa4, 0xc3, 0x2b, 0x0f, 0x7b, 0x76, 0x10, 0xc5, 0x41, 0x0d,
    0xe8, 0xd2, 0x56, 0xe7, 0x1c, 0xe0, 0x1b, 0x8b, 0xd6, 0x4c, 0xeb, 0xd7, 0xcf, 0xbb, 0x9e, 0x11,
    0x95};

/******************************************/
/*             NANOX TARGET               */
/******************************************/

/* U2F PROD env */
#if defined(PROD_U2F_NANOX_PRIVATE_KEY)
static const uint8_t PROD_U2F_NANOX_ATTESTATION_KEY[] = {PROD_U2F_NANOX_PRIVATE_KEY};
#endif

static const uint8_t PROD_U2F_NANOX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xd1, 0x30, 0x82, 0x01, 0x77, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xd4, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x33, 0x31, 0x30,
    0x33, 0x33, 0x30, 0x39, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x30, 0x33,
    0x33, 0x30, 0x39, 0x5a, 0x30, 0x75, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x28, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x58,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
    0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06,
    0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x89, 0x7e, 0x86, 0x77, 0xcf, 0xbb, 0x7d, 0xcf, 0xb7, 0x00,
    0x3b, 0xbf, 0xa2, 0x38, 0x80, 0x6a, 0x0e, 0x67, 0xfc, 0xa2, 0xa6, 0x70, 0x58, 0x1f, 0x24, 0x32,
    0x2b, 0xef, 0xb8, 0x2e, 0x1b, 0xe5, 0xa7, 0x7f, 0x49, 0xba, 0x6d, 0x83, 0x9f, 0x27, 0x3b, 0xde,
    0xbf, 0x01, 0x67, 0x7e, 0x10, 0xa3, 0x28, 0x0f, 0x64, 0x2b, 0x9c, 0xb4, 0xd2, 0xe5, 0x5b, 0xb0,
    0xac, 0x1f, 0x13, 0x6e, 0x35, 0xf7, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b, 0x06,
    0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x05, 0x20, 0x30,
    0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45,
    0x02, 0x21, 0x00, 0xee, 0x4a, 0xe2, 0xb4, 0x94, 0x71, 0x26, 0x6e, 0x56, 0x10, 0xbd, 0x68, 0xbd,
    0xef, 0xe3, 0x1d, 0xc3, 0x89, 0x65, 0x93, 0xbe, 0x1a, 0xba, 0x7b, 0x05, 0xe9, 0x2c, 0x2e, 0x70,
    0x13, 0x6d, 0x96, 0x02, 0x20, 0x5d, 0x06, 0x56, 0x4a, 0x6b, 0x5d, 0xc5, 0x71, 0xec, 0xe2, 0x54,
    0x66, 0xfa, 0xcf, 0x65, 0xc9, 0xbe, 0x29, 0x35, 0x0a, 0xfe, 0x6f, 0x65, 0x2f, 0xc1, 0xdc, 0xc4,
    0x5d, 0x8d, 0xef, 0xf6, 0x4e};

/* FIDO2 PROD env */
#if defined(PROD_FIDO2_NANOX_PRIVATE_KEY)
static const uint8_t PROD_FIDO2_NANOX_ATTESTATION_KEY[] = {PROD_FIDO2_NANOX_PRIVATE_KEY};
#endif

static const uint8_t PROD_FIDO2_NANOX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xed, 0x30, 0x82, 0x01, 0x93, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xd0, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x33, 0x31, 0x30,
    0x33, 0x33, 0x30, 0x39, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x30, 0x33,
    0x33, 0x30, 0x39, 0x5a, 0x30, 0x75, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x28, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x58,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
    0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06,
    0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x46, 0x56, 0xa9, 0x2b, 0x55, 0x91, 0x33, 0xe4, 0x1b, 0xa0,
    0xad, 0x88, 0xcd, 0xa4, 0x4f, 0xe8, 0x17, 0xc8, 0xba, 0x48, 0xd6, 0xf5, 0x06, 0xde, 0x0e, 0x65,
    0x77, 0x7f, 0xd5, 0xf2, 0xfb, 0xe2, 0xe7, 0xe8, 0x68, 0x57, 0x6a, 0xb5, 0x04, 0xa4, 0x15, 0x4f,
    0xd4, 0x25, 0xca, 0x1b, 0x32, 0xfc, 0xc9, 0x12, 0xf0, 0x7a, 0x2a, 0xd6, 0x4c, 0x71, 0x8d, 0xb2,
    0xbf, 0xcb, 0xac, 0xd5, 0xc4, 0xda, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b, 0x06,
    0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0xfc, 0xb1, 0xbc,
    0xb4, 0xf3, 0x70, 0x07, 0x8c, 0x69, 0x93, 0xbc, 0x24, 0xd0, 0xae, 0x3f, 0xbe, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xc2,
    0xa7, 0x6c, 0xf9, 0x7d, 0x32, 0x8c, 0x72, 0xf1, 0x88, 0xdc, 0xfd, 0x4b, 0x19, 0xe4, 0x8a, 0x0a,
    0x06, 0x96, 0x5d, 0x15, 0xd6, 0x24, 0x09, 0xef, 0x72, 0x4f, 0x7f, 0x75, 0x57, 0x80, 0xd2, 0x02,
    0x20, 0x43, 0x3a, 0x4a, 0x61, 0x00, 0x73, 0x08, 0x78, 0x75, 0xe6, 0x37, 0xa5, 0x20, 0x59, 0x56,
    0xb6, 0x4d, 0xc6, 0x6c, 0x9c, 0x7f, 0x28, 0xa0, 0x74, 0x8b, 0x5b, 0xb5, 0x58, 0x51, 0x67, 0xe7,
    0xe0};

/* U2F TEST env */
static const uint8_t TEST_U2F_NANOX_ATTESTATION_KEY[] = {
    0x76, 0x76, 0x93, 0xbf, 0x44, 0x92, 0x28, 0x8a, 0x78, 0x64, 0xc4, 0xd7, 0x0e, 0x6d, 0x37, 0x3c,
    0xda, 0xed, 0x02, 0xe3, 0x9c, 0x38, 0x1d, 0x7c, 0x2a, 0x0d, 0x44, 0xeb, 0x5d, 0xb0, 0x0d, 0x55};
static const uint8_t TEST_U2F_NANOX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xd1, 0x30, 0x82, 0x01, 0x77, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xcc, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x33,
    0x35, 0x34, 0x34, 0x37, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x31, 0x37, 0x31, 0x33, 0x35,
    0x34, 0x34, 0x37, 0x5a, 0x30, 0x75, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x28, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x58,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
    0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06,
    0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x59, 0xa9, 0x8c, 0x0a, 0x3e, 0xc7, 0x20, 0xed, 0x0c, 0xa8,
    0x94, 0x2a, 0xc5, 0xcc, 0x09, 0x55, 0x47, 0x7f, 0xe8, 0xac, 0x8a, 0xfd, 0x39, 0x8b, 0xc4, 0x8e,
    0xe3, 0xe9, 0x5a, 0x06, 0x26, 0x6d, 0x86, 0xe5, 0x78, 0x0d, 0x39, 0x43, 0x8a, 0x63, 0x0d, 0x3c,
    0x96, 0x39, 0x9d, 0xc0, 0xb5, 0x12, 0x7d, 0xbb, 0xf2, 0x87, 0xc9, 0x45, 0xf8, 0x78, 0x87, 0x5f,
    0xbb, 0x1e, 0xe3, 0x52, 0x3c, 0x72, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b, 0x06,
    0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x05, 0x20, 0x30,
    0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45,
    0x02, 0x20, 0x0f, 0x6c, 0x69, 0x13, 0x07, 0x5e, 0x98, 0x05, 0x34, 0x88, 0xc9, 0x2a, 0xd6, 0x1f,
    0x0f, 0xf2, 0x3d, 0x4c, 0x09, 0x23, 0xd6, 0x01, 0x11, 0x3b, 0x94, 0x11, 0x12, 0xc5, 0xd0, 0xc6,
    0x14, 0x3a, 0x02, 0x21, 0x00, 0xce, 0x72, 0xcd, 0x2c, 0xff, 0x67, 0xc8, 0x6a, 0x02, 0x3e, 0xc9,
    0x2d, 0x51, 0x1e, 0xbe, 0x9b, 0xb4, 0x0d, 0x3f, 0x32, 0xf8, 0x72, 0x23, 0x13, 0x44, 0xbb, 0x33,
    0xb4, 0x32, 0xc6, 0x55, 0x8b};

/* FIDO2 TEST env */
static const uint8_t TEST_FIDO2_NANOX_ATTESTATION_KEY[] = {
    0x80, 0xcb, 0xdc, 0x07, 0x81, 0xee, 0x66, 0xca, 0xd6, 0x98, 0x2c, 0xa4, 0xf2, 0xc1, 0x99, 0xed,
    0x78, 0x9b, 0x40, 0xf4, 0xe9, 0x7c, 0xb9, 0xdd, 0x50, 0xd2, 0x33, 0x4d, 0xb0, 0x7e, 0x84, 0x75};
static const uint8_t TEST_FIDO2_NANOX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xed, 0x30, 0x82, 0x01, 0x93, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xc8, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x32, 0x30, 0x39, 0x32, 0x36, 0x30, 0x38,
    0x30, 0x36, 0x30, 0x36, 0x5a, 0x17, 0x0d, 0x33, 0x32, 0x30, 0x39, 0x32, 0x33, 0x30, 0x38, 0x30,
    0x36, 0x30, 0x36, 0x5a, 0x30, 0x75, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x31, 0x30, 0x2f, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x28, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x58,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
    0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06,
    0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03,
    0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x9d, 0x42, 0xf8, 0x21, 0xeb, 0x94, 0x37, 0x7f, 0xf0, 0x99,
    0x3b, 0x83, 0x4a, 0x55, 0x18, 0xca, 0xc0, 0xc2, 0xf7, 0x9f, 0x21, 0x8f, 0x3a, 0x26, 0x53, 0x98,
    0x5d, 0x8e, 0x21, 0x51, 0x24, 0xb2, 0xd9, 0xe6, 0x35, 0x9f, 0xc8, 0x5b, 0x77, 0x48, 0xe1, 0xd6,
    0x2a, 0xef, 0xea, 0xb4, 0x73, 0x6a, 0xa7, 0x54, 0x65, 0xe4, 0x9c, 0x8b, 0x0b, 0x8d, 0x88, 0x8a,
    0xd3, 0x3a, 0x6b, 0xe2, 0xb6, 0x85, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b, 0x06,
    0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0xfc, 0xb1, 0xbc,
    0xb4, 0xf3, 0x70, 0x07, 0x8c, 0x69, 0x93, 0xbc, 0x24, 0xd0, 0xae, 0x3f, 0xbe, 0x30, 0x0c, 0x06,
    0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x20, 0x3f, 0xc7,
    0x8d, 0x23, 0xab, 0x84, 0x4e, 0x7d, 0x10, 0x16, 0xc3, 0xc1, 0x55, 0x45, 0x20, 0x20, 0x5f, 0x48,
    0xcc, 0x13, 0xf3, 0xe8, 0x3b, 0x17, 0xb8, 0xc8, 0x83, 0x2f, 0x75, 0xcd, 0x82, 0xb0, 0x02, 0x21,
    0x00, 0xa0, 0x8a, 0x25, 0x06, 0x0f, 0x37, 0x6a, 0x9f, 0x4c, 0x12, 0xa3, 0x8b, 0xf2, 0x32, 0x8d,
    0x21, 0x6f, 0x05, 0x51, 0x0a, 0xbe, 0xd7, 0xb3, 0x7e, 0x6f, 0x2a, 0x4b, 0xc3, 0x3d, 0x33, 0xfe,
    0x4d};

/******************************************/
/*            NANOSP TARGET               */
/******************************************/

/* U2F PROD env */
#if defined(PROD_U2F_NANOSP_PRIVATE_KEY)
static const uint8_t PROD_U2F_NANOSP_ATTESTATION_KEY[] = {PROD_U2F_NANOSP_PRIVATE_KEY};
#endif

static const uint8_t PROD_U2F_NANOSP_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xd1, 0x30, 0x82, 0x01, 0x78, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xd5, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x33, 0x31, 0x30,
    0x33, 0x33, 0x31, 0x30, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x30, 0x33,
    0x33, 0x31, 0x30, 0x5a, 0x30, 0x76, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x32, 0x30, 0x30, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x29, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x53,
    0x50, 0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
    0x74, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13,
    0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
    0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x99, 0x6d, 0xb9, 0xa3, 0xe1, 0xd9, 0x12, 0x25, 0xa1,
    0x5e, 0xe1, 0x25, 0x38, 0xe4, 0x44, 0x5a, 0xa0, 0x3d, 0x08, 0x13, 0xc2, 0x57, 0xc7, 0xb6, 0x81,
    0x4f, 0x11, 0x2a, 0x5b, 0x1c, 0x65, 0x80, 0xa4, 0xde, 0x07, 0x73, 0x76, 0x42, 0x12, 0x32, 0x8f,
    0x50, 0x59, 0x80, 0xfb, 0x41, 0x05, 0x34, 0x7e, 0x0d, 0x29, 0xc2, 0x6c, 0xa3, 0xe9, 0x4e, 0xe5,
    0xaf, 0x84, 0x20, 0x84, 0xd7, 0x18, 0xce, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b,
    0x06, 0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x05, 0x20,
    0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47, 0x00, 0x30,
    0x44, 0x02, 0x20, 0x0b, 0xeb, 0x4d, 0xb4, 0xc2, 0x9e, 0x72, 0xd2, 0xee, 0x49, 0xb8, 0xdd, 0x7c,
    0x49, 0x3d, 0x4e, 0x40, 0xde, 0x39, 0x38, 0xe0, 0x10, 0xe3, 0x9e, 0xdc, 0x49, 0xd5, 0xfd, 0x7c,
    0x02, 0x17, 0x4a, 0x02, 0x20, 0x45, 0xc8, 0xae, 0x81, 0x16, 0x45, 0x27, 0x34, 0xc6, 0x60, 0x44,
    0xf2, 0x66, 0x3b, 0x3f, 0xde, 0xc2, 0x0e, 0xe7, 0xdb, 0xc2, 0x78, 0x68, 0xa9, 0xad, 0xaf, 0x99,
    0x89, 0x48, 0x96, 0xe1, 0xec};

/* FIDO2 PROD env */
#if defined(PROD_FIDO2_NANOSP_PRIVATE_KEY)
static const uint8_t PROD_FIDO2_NANOSP_ATTESTATION_KEY[] = {PROD_FIDO2_NANOSP_PRIVATE_KEY};
#endif

static const uint8_t PROD_FIDO2_NANOSP_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xee, 0x30, 0x82, 0x01, 0x94, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xd1, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x33, 0x31, 0x30,
    0x33, 0x33, 0x30, 0x39, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x30, 0x33,
    0x33, 0x30, 0x39, 0x5a, 0x30, 0x76, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x32, 0x30, 0x30, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x29, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x53,
    0x50, 0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
    0x74, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13,
    0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
    0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0xf3, 0xef, 0x51, 0xc3, 0x33, 0xfe, 0xfb, 0x09, 0x40,
    0x8f, 0xe6, 0x51, 0x55, 0x35, 0x8e, 0xd9, 0x33, 0xee, 0xcf, 0x62, 0x50, 0x1f, 0xbb, 0x25, 0x32,
    0x23, 0x42, 0x95, 0x5f, 0x56, 0x45, 0x2c, 0x24, 0x70, 0xf4, 0xf6, 0x38, 0x4f, 0xaa, 0xa8, 0xe0,
    0xbc, 0xac, 0xda, 0xcb, 0xbf, 0xc5, 0xcb, 0xbd, 0x29, 0xe0, 0xc3, 0x48, 0x15, 0x2a, 0xef, 0xab,
    0x57, 0xf3, 0xf7, 0xca, 0x0d, 0xbe, 0x41, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b,
    0x06, 0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0x58, 0xb4,
    0x4d, 0x0b, 0x0a, 0x7c, 0xf3, 0x3a, 0xfd, 0x48, 0xf7, 0x15, 0x3c, 0x87, 0x13, 0x52, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08,
    0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00,
    0xb7, 0x01, 0x8c, 0xfa, 0xe8, 0xd0, 0x71, 0x2c, 0x20, 0x31, 0x5c, 0xd6, 0xdb, 0x92, 0xb7, 0x90,
    0xef, 0xa1, 0x9c, 0x46, 0x47, 0xad, 0x9a, 0xea, 0x43, 0xfc, 0x2d, 0xbe, 0x86, 0x76, 0xfd, 0x8d,
    0x02, 0x20, 0x2c, 0x54, 0xf8, 0x24, 0xeb, 0xd8, 0x1e, 0x6e, 0x02, 0x7a, 0x8d, 0xe3, 0x4b, 0xac,
    0xb5, 0x13, 0x33, 0x57, 0x2b, 0x77, 0x7c, 0xea, 0x91, 0xde, 0xe7, 0x5a, 0x93, 0x8e, 0x35, 0xc4,
    0x99, 0xad};

/* U2F TEST env */
static const uint8_t TEST_U2F_NANOSP_ATTESTATION_KEY[] = {
    0xf0, 0x6f, 0x26, 0xab, 0x67, 0xb4, 0x4f, 0xb5, 0x8a, 0x7d, 0x2c, 0x26, 0x46, 0xf5, 0xc4, 0xca,
    0xef, 0xec, 0xf2, 0xf9, 0x7d, 0x92, 0xe2, 0x93, 0x69, 0x76, 0xbd, 0x8b, 0xfe, 0xf9, 0x01, 0x7c};
static const uint8_t TEST_U2F_NANOSP_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xd1, 0x30, 0x82, 0x01, 0x78, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xcb, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x33,
    0x35, 0x34, 0x34, 0x35, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x31, 0x37, 0x31, 0x33, 0x35,
    0x34, 0x34, 0x35, 0x5a, 0x30, 0x76, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x32, 0x30, 0x30, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x29, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x53,
    0x50, 0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
    0x74, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13,
    0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
    0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x09, 0x06, 0xd1, 0x02, 0xf2, 0x69, 0x7f, 0xc9, 0xa7,
    0x9c, 0xda, 0x64, 0x8c, 0x05, 0xe1, 0xc7, 0xb2, 0xb1, 0xd6, 0x7a, 0x1b, 0xe6, 0x06, 0xac, 0x8c,
    0xcd, 0xf7, 0xad, 0x59, 0x44, 0xec, 0x24, 0x73, 0x71, 0xc2, 0x28, 0x93, 0x42, 0x6c, 0xbf, 0x3e,
    0xc2, 0xdb, 0x92, 0x06, 0x82, 0x84, 0x54, 0xb7, 0x09, 0xc9, 0xa6, 0x0a, 0xc8, 0x9b, 0x5d, 0xef,
    0xbf, 0x2a, 0xd3, 0x6c, 0xb2, 0xbd, 0xfb, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b,
    0x06, 0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x05, 0x20,
    0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47, 0x00, 0x30,
    0x44, 0x02, 0x20, 0x6b, 0xf0, 0x86, 0x39, 0x96, 0x54, 0x35, 0xd5, 0x5b, 0x07, 0x07, 0x35, 0xe5,
    0xdb, 0x7a, 0x7a, 0x98, 0xc6, 0x0f, 0x87, 0xa2, 0xab, 0xa6, 0x9e, 0xfc, 0x04, 0xd6, 0x65, 0x93,
    0xbf, 0xc7, 0x18, 0x02, 0x20, 0x27, 0x02, 0x4b, 0x7c, 0x2e, 0xcb, 0x1b, 0x4f, 0x4f, 0x10, 0x49,
    0x6e, 0x61, 0x6e, 0x62, 0x51, 0x1e, 0x07, 0xea, 0xe1, 0x26, 0x5a, 0x34, 0xdd, 0x83, 0x55, 0x67,
    0x9b, 0x86, 0xb7, 0x69, 0xf8};

/* FIDO2 TEST env */
static const uint8_t TEST_FIDO2_NANOSP_ATTESTATION_KEY[] = {
    0xde, 0x06, 0xac, 0xc9, 0xc3, 0xf5, 0xdc, 0xa0, 0x6b, 0x3c, 0x69, 0xce, 0x9a, 0x82, 0x8f, 0xed,
    0x1a, 0x68, 0x6e, 0xd0, 0xef, 0x42, 0xd2, 0x4d, 0x9e, 0xbf, 0xaf, 0xe1, 0x62, 0x7b, 0x62, 0x29};
static const uint8_t TEST_FIDO2_NANOSP_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xee, 0x30, 0x82, 0x01, 0x94, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xc9, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x32, 0x30, 0x39, 0x32, 0x36, 0x30, 0x38,
    0x30, 0x36, 0x30, 0x38, 0x5a, 0x17, 0x0d, 0x33, 0x32, 0x30, 0x39, 0x32, 0x33, 0x30, 0x38, 0x30,
    0x36, 0x30, 0x38, 0x5a, 0x30, 0x76, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x32, 0x30, 0x30, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x29, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x4e, 0x61, 0x6e, 0x6f, 0x2d, 0x53,
    0x50, 0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
    0x74, 0x69, 0x6f, 0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13,
    0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
    0x03, 0x01, 0x07, 0x03, 0x42, 0x00, 0x04, 0x4a, 0x36, 0x0d, 0x34, 0x8d, 0x0d, 0x94, 0x5a, 0xf2,
    0xbb, 0xe1, 0x99, 0x35, 0x3b, 0x67, 0x5b, 0x48, 0x93, 0x7f, 0x68, 0x09, 0xe1, 0xc4, 0xbc, 0xad,
    0xc1, 0x92, 0x0e, 0x82, 0x1e, 0x57, 0xea, 0xef, 0xa2, 0xf4, 0x4b, 0x3c, 0x95, 0xc4, 0x0a, 0xa2,
    0xc9, 0x0f, 0x4b, 0xba, 0x3d, 0x8c, 0x43, 0xc3, 0x0f, 0xd8, 0x75, 0x56, 0x45, 0x33, 0x3c, 0xe5,
    0xf3, 0x0f, 0x2f, 0xa0, 0x31, 0x2e, 0xcf, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b,
    0x06, 0x01, 0x04, 0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0x58, 0xb4,
    0x4d, 0x0b, 0x0a, 0x7c, 0xf3, 0x3a, 0xfd, 0x48, 0xf7, 0x15, 0x3c, 0x87, 0x13, 0x52, 0x30, 0x0c,
    0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08,
    0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00,
    0xd9, 0x0f, 0xc5, 0x42, 0xd5, 0x04, 0x4f, 0x06, 0x85, 0x1a, 0x27, 0xf0, 0x6f, 0x98, 0x8f, 0x18,
    0xee, 0xec, 0xba, 0xb3, 0x95, 0x4d, 0xd9, 0xf6, 0x3d, 0xb1, 0x64, 0x50, 0x03, 0x71, 0xd4, 0x3b,
    0x02, 0x20, 0x4d, 0x60, 0xb7, 0x75, 0x2a, 0x20, 0xb6, 0x81, 0xa9, 0x47, 0xac, 0x42, 0x96, 0x28,
    0x6c, 0xeb, 0x8e, 0x0e, 0x0b, 0x29, 0xa4, 0x39, 0xb8, 0xe5, 0x5a, 0x38, 0x89, 0x9f, 0xec, 0x8f,
    0x07, 0x36};

/******************************************/
/*              STAX TARGET               */
/******************************************/

/* U2F PROD env */
#if defined(PROD_U2F_STAX_PRIVATE_KEY)
static const uint8_t PROD_U2F_STAX_ATTESTATION_KEY[] = {PROD_U2F_STAX_PRIVATE_KEY};
#endif

static const uint8_t PROD_U2F_STAX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xcf, 0x30, 0x82, 0x01, 0x75, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xd6, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x33, 0x31, 0x30,
    0x33, 0x33, 0x31, 0x30, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x30, 0x33,
    0x33, 0x31, 0x30, 0x5a, 0x30, 0x73, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x26, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x53, 0x74, 0x61, 0x78, 0x20, 0x46,
    0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0x3f, 0x3e, 0x51, 0xb3, 0x99, 0x02, 0xae, 0xbf, 0x40, 0xbf, 0x10, 0x58,
    0xcd, 0x34, 0xb4, 0x04, 0x4f, 0xfb, 0xed, 0x5f, 0x4b, 0xbe, 0xd8, 0x30, 0xf9, 0x95, 0x70, 0x07,
    0x58, 0x31, 0x25, 0x84, 0x6a, 0x8d, 0x6c, 0x20, 0x9f, 0x99, 0xb0, 0xa0, 0x35, 0xef, 0x53, 0xdb,
    0xbf, 0x4b, 0x41, 0x32, 0x8f, 0x64, 0x6c, 0x7e, 0x1f, 0x73, 0xde, 0xe2, 0x19, 0x46, 0xda, 0xa0,
    0x26, 0xce, 0xad, 0xbb, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b, 0x06, 0x01, 0x04,
    0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x05, 0x20, 0x30, 0x0a, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21,
    0x00, 0xd5, 0xe7, 0x8f, 0x5a, 0xd6, 0x78, 0x5e, 0x40, 0x5e, 0x56, 0xc2, 0xb9, 0x8d, 0x4e, 0x6c,
    0x75, 0xe1, 0xa1, 0x3b, 0x5d, 0xf7, 0xb2, 0x8c, 0x96, 0xf0, 0xec, 0xea, 0xf1, 0x95, 0x93, 0xee,
    0x48, 0x02, 0x20, 0x42, 0x3e, 0x41, 0xaf, 0xfe, 0x9b, 0xe1, 0xd2, 0xdf, 0x55, 0xb9, 0xa8, 0xe5,
    0xee, 0x6b, 0xa8, 0x0e, 0x7a, 0x31, 0xf9, 0x19, 0x3c, 0x73, 0x2a, 0x1e, 0x49, 0xb3, 0x60, 0x10,
    0xb7, 0x4a, 0xd6};

/* FIDO2 PROD env */
#if defined(PROD_FIDO2_STAX_PRIVATE_KEY)
static const uint8_t PROD_FIDO2_STAX_ATTESTATION_KEY[] = {PROD_FIDO2_STAX_PRIVATE_KEY};
#endif

static const uint8_t PROD_FIDO2_STAX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xea, 0x30, 0x82, 0x01, 0x91, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xd2, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x33, 0x31, 0x30,
    0x33, 0x33, 0x30, 0x39, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x30, 0x33,
    0x33, 0x30, 0x39, 0x5a, 0x30, 0x73, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x26, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x53, 0x74, 0x61, 0x78, 0x20, 0x46,
    0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0x92, 0xd1, 0xbe, 0x2f, 0x7c, 0x5f, 0xab, 0xd2, 0x4b, 0x6f, 0xfe, 0x0a,
    0x60, 0x5e, 0x50, 0x5f, 0xfc, 0xf0, 0x85, 0x8a, 0x66, 0x4e, 0x86, 0xf8, 0xad, 0x99, 0xff, 0x18,
    0x91, 0x52, 0x8b, 0x9a, 0x48, 0xbd, 0x4b, 0xb4, 0xb3, 0x2e, 0x4c, 0x90, 0xd4, 0x90, 0xc1, 0x6a,
    0xd9, 0x58, 0xb8, 0x92, 0xf1, 0x66, 0xc6, 0x77, 0x2d, 0xba, 0xf8, 0x82, 0x9c, 0xdf, 0x73, 0x99,
    0x74, 0x17, 0x94, 0x50, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b, 0x06, 0x01, 0x04,
    0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0x6e, 0x24, 0xd3, 0x85, 0x00,
    0x4a, 0x16, 0xa0, 0x7b, 0xfe, 0xef, 0xd9, 0x63, 0x84, 0x5b, 0x34, 0x30, 0x0c, 0x06, 0x03, 0x55,
    0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48,
    0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47, 0x00, 0x30, 0x44, 0x02, 0x20, 0x28, 0xfd, 0xca, 0xdf,
    0x5c, 0x7c, 0x53, 0x8a, 0xc4, 0xbd, 0x86, 0x80, 0xaa, 0x26, 0x7f, 0x02, 0xea, 0x97, 0xed, 0x2d,
    0x15, 0x6f, 0xad, 0xeb, 0xf3, 0xde, 0x93, 0xdc, 0x4a, 0x40, 0x11, 0x63, 0x02, 0x20, 0x7c, 0xdd,
    0xa4, 0xbb, 0x54, 0x58, 0xc5, 0x41, 0x89, 0xaa, 0xee, 0x3f, 0x2d, 0x58, 0x9f, 0x6a, 0xe9, 0xec,
    0x09, 0x97, 0x89, 0xb8, 0xb2, 0xff, 0xe4, 0x44, 0xbe, 0x70, 0x4a, 0x3a, 0x97, 0xdf};

/* U2F TEST env */
static const uint8_t TEST_U2F_STAX_ATTESTATION_KEY[] = {
    0xaf, 0xb8, 0x18, 0x41, 0xc4, 0xf2, 0x12, 0x69, 0x62, 0xf6, 0x74, 0x4e, 0xc1, 0x7f, 0x38, 0x61,
    0xda, 0xa9, 0x39, 0x28, 0x4b, 0x39, 0x78, 0xf1, 0x86, 0x00, 0xab, 0xf4, 0x4a, 0xb4, 0x3a, 0x5e};
static const uint8_t TEST_U2F_STAX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xcf, 0x30, 0x82, 0x01, 0x75, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xcd, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x33,
    0x35, 0x34, 0x35, 0x30, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x31, 0x37, 0x31, 0x33, 0x35,
    0x34, 0x35, 0x30, 0x5a, 0x30, 0x73, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x26, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x53, 0x74, 0x61, 0x78, 0x20, 0x46,
    0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0xb3, 0x03, 0xdd, 0xe3, 0x30, 0xf1, 0xd7, 0x48, 0x9a, 0x19, 0xb9, 0x39,
    0x57, 0xec, 0x7d, 0x25, 0x56, 0xae, 0x52, 0x78, 0xcb, 0x4d, 0x0a, 0x48, 0x45, 0xd2, 0x32, 0x37,
    0x16, 0xb9, 0x32, 0xf4, 0x20, 0x31, 0x0a, 0x8d, 0xaa, 0x5c, 0xae, 0x09, 0xb3, 0xed, 0x69, 0xe1,
    0xe7, 0xd3, 0x5b, 0x4f, 0x5f, 0x4d, 0xd3, 0xce, 0x4d, 0x78, 0x7c, 0xcb, 0xe0, 0x45, 0x2c, 0xe5,
    0xa6, 0x12, 0x77, 0xbd, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b, 0x06, 0x01, 0x04,
    0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x05, 0x20, 0x30, 0x0a, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21,
    0x00, 0xc5, 0xf3, 0xf8, 0xcc, 0xc4, 0xc0, 0x76, 0x68, 0x72, 0x3e, 0x21, 0xa9, 0x88, 0x5a, 0x6a,
    0x18, 0x94, 0xfb, 0xc8, 0x5c, 0x55, 0xfa, 0x6e, 0x28, 0xf6, 0x44, 0x23, 0x9d, 0xaf, 0x4a, 0x29,
    0x43, 0x02, 0x20, 0x62, 0x6e, 0x27, 0x1e, 0x27, 0x2f, 0x76, 0x92, 0x8b, 0x44, 0xd6, 0x6d, 0x21,
    0xdb, 0xe9, 0x94, 0x87, 0x4e, 0x79, 0xc2, 0x0a, 0xfc, 0x74, 0x5f, 0xf4, 0x8c, 0x11, 0x0a, 0xb1,
    0x15, 0xd0, 0x94};

/* FIDO2 TEST env */
static const uint8_t TEST_FIDO2_STAX_ATTESTATION_KEY[] = {
    0x97, 0xcf, 0x0c, 0x79, 0xd5, 0x77, 0xc3, 0x48, 0x9e, 0x01, 0x4d, 0x69, 0x80, 0xef, 0xac, 0x5e,
    0x31, 0x7a, 0x99, 0x59, 0x57, 0xbc, 0xd5, 0xbc, 0x97, 0x24, 0xdc, 0xe6, 0x70, 0x7c, 0x8f, 0xda};
static const uint8_t TEST_FIDO2_STAX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xec, 0x30, 0x82, 0x01, 0x91, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x0c,
    0x20, 0x10, 0x9d, 0x50, 0xe9, 0xa0, 0x63, 0x59, 0xa6, 0xf1, 0x03, 0xe4, 0x83, 0x5e, 0xbb, 0xd5,
    0x3b, 0x10, 0xce, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x33, 0x30, 0x32, 0x32, 0x30, 0x31, 0x33,
    0x35, 0x34, 0x35, 0x37, 0x5a, 0x17, 0x0d, 0x33, 0x33, 0x30, 0x32, 0x31, 0x37, 0x31, 0x33, 0x35,
    0x34, 0x35, 0x37, 0x5a, 0x30, 0x73, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x26, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x53, 0x74, 0x61, 0x78, 0x20, 0x46,
    0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0xd5, 0x55, 0x55, 0xdd, 0xb5, 0x26, 0xcf, 0xd7, 0x48, 0x93, 0x85, 0x08,
    0x5f, 0x2a, 0x76, 0x22, 0xbd, 0xc7, 0x81, 0x74, 0x18, 0x37, 0xef, 0x8c, 0xf7, 0xeb, 0xa6, 0x62,
    0x05, 0x1e, 0x79, 0x8a, 0x60, 0x3d, 0x3e, 0xa0, 0x90, 0xbf, 0x7b, 0x92, 0x18, 0x9b, 0xc8, 0xe5,
    0x6d, 0x13, 0x46, 0x0a, 0x45, 0xd5, 0xc4, 0xce, 0x1c, 0x3d, 0x8f, 0xb5, 0xf6, 0x4d, 0x1f, 0xbb,
    0x34, 0xaf, 0x6e, 0xf0, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b, 0x06, 0x01, 0x04,
    0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0x6e, 0x24, 0xd3, 0x85, 0x00,
    0x4a, 0x16, 0xa0, 0x7b, 0xfe, 0xef, 0xd9, 0x63, 0x84, 0x5b, 0x34, 0x30, 0x0c, 0x06, 0x03, 0x55,
    0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48,
    0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21, 0x00, 0xba, 0xcf, 0xa2,
    0x5c, 0x92, 0x1e, 0x92, 0xa4, 0x1c, 0x9b, 0x96, 0xd3, 0xe7, 0xc0, 0x28, 0xfb, 0x64, 0x98, 0xd0,
    0x60, 0xc0, 0x4c, 0xb7, 0xfa, 0x13, 0xca, 0x8e, 0x18, 0x93, 0x22, 0xdb, 0x38, 0x02, 0x21, 0x00,
    0xb9, 0x83, 0x8a, 0x30, 0x81, 0xeb, 0x45, 0xca, 0x9d, 0xf1, 0x0d, 0x08, 0x92, 0x88, 0x5c, 0xae,
    0x03, 0x03, 0x86, 0xad, 0xb8, 0xd4, 0x4b, 0xa4, 0x23, 0xe3, 0xf4, 0x1d, 0x6a, 0x4e, 0xee, 0xf0,
};

/******************************************/
/*              FLEX TARGET               */
/******************************************/

/* U2F PROD env */
#if defined(PROD_U2F_FLEX_PRIVATE_KEY)
static const uint8_t PROD_U2F_FLEX_ATTESTATION_KEY[] = {PROD_U2F_FLEX_PRIVATE_KEY};
#endif
static const uint8_t PROD_U2F_FLEX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xce, 0x30, 0x82, 0x01, 0x75, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x07,
    0x68, 0x7b, 0xad, 0x3a, 0x2c, 0x16, 0xb0, 0x33, 0x90, 0x78, 0x7a, 0x16, 0x34, 0x6d, 0x9d, 0x73,
    0x6f, 0x22, 0x23, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x34, 0x30, 0x35, 0x31, 0x36, 0x30, 0x39,
    0x31, 0x33, 0x31, 0x39, 0x5a, 0x17, 0x0d, 0x33, 0x34, 0x30, 0x35, 0x31, 0x34, 0x30, 0x39, 0x31,
    0x33, 0x31, 0x39, 0x5a, 0x30, 0x73, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x26, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x46,
    0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0x4a, 0xe1, 0x7b, 0x51, 0x09, 0x55, 0x7e, 0x43, 0x5b, 0xce, 0x15, 0x93,
    0xd1, 0xd3, 0x66, 0x8c, 0xcc, 0xe2, 0x5e, 0x8b, 0x97, 0xbc, 0x6a, 0x64, 0x4e, 0x97, 0x58, 0x42,
    0xb2, 0x10, 0x3d, 0x17, 0xc3, 0xeb, 0xe8, 0x93, 0x02, 0x59, 0xc7, 0xe5, 0x63, 0x92, 0x50, 0x40,
    0x0a, 0x0e, 0x80, 0xb0, 0xcb, 0xd7, 0xc3, 0x32, 0xbd, 0x26, 0x21, 0xc0, 0x5c, 0xda, 0xa2, 0xd5,
    0xc6, 0xea, 0x5f, 0x4a, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b, 0x06, 0x01, 0x04,
    0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x04, 0x30, 0x30, 0x0a, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x47, 0x00, 0x30, 0x44, 0x02, 0x20,
    0x40, 0x02, 0xe5, 0xe2, 0xd1, 0x64, 0x88, 0x90, 0x2d, 0x36, 0xf5, 0xb2, 0x77, 0x83, 0xc2, 0x90,
    0x25, 0x1e, 0x5f, 0xb5, 0xcf, 0x2e, 0xa8, 0x5d, 0x68, 0xa9, 0x8f, 0xdb, 0xcd, 0x8e, 0x5e, 0x6a,
    0x02, 0x20, 0x26, 0xdd, 0x62, 0x08, 0xed, 0x59, 0xcf, 0x48, 0xa4, 0x1e, 0xcd, 0x3d, 0x09, 0xc8,
    0xfd, 0xfd, 0x46, 0xf5, 0x06, 0x8e, 0xf5, 0x04, 0x02, 0x1e, 0x20, 0xc9, 0x1a, 0xb3, 0x3b, 0x2a,
    0xaa, 0x95};

/* FIDO2 PROD env */
#if defined(PROD_FIDO2_FLEX_PRIVATE_KEY)
static const uint8_t PROD_FIDO2_FLEX_ATTESTATION_KEY[] = {PROD_FIDO2_FLEX_PRIVATE_KEY};
#endif

static const uint8_t PROD_FIDO2_FLEX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xeb, 0x30, 0x82, 0x01, 0x91, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x7e,
    0xbc, 0xf5, 0xf9, 0xc1, 0xd2, 0x9f, 0x87, 0x8e, 0xe0, 0x97, 0xd9, 0x55, 0xd6, 0x60, 0x3b, 0x52,
    0xc8, 0x7d, 0xf8, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x34, 0x30, 0x35, 0x31, 0x36, 0x30, 0x39,
    0x31, 0x33, 0x31, 0x37, 0x5a, 0x17, 0x0d, 0x33, 0x34, 0x30, 0x35, 0x31, 0x34, 0x30, 0x39, 0x31,
    0x33, 0x31, 0x37, 0x5a, 0x30, 0x73, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x26, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x46,
    0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0xfd, 0x3d, 0x6a, 0x61, 0xa9, 0x3d, 0x84, 0xa9, 0x46, 0x02, 0x2d, 0xd8,
    0xd7, 0x5d, 0x6c, 0x67, 0x3e, 0x95, 0x07, 0xfd, 0x5b, 0x23, 0xd6, 0x8f, 0x32, 0x8c, 0xc4, 0x9e,
    0x7a, 0x31, 0x21, 0x11, 0xde, 0x50, 0x5f, 0xda, 0xe7, 0x54, 0xd2, 0xed, 0x52, 0x11, 0x1a, 0xcc,
    0x9a, 0x45, 0xcd, 0xcf, 0xd8, 0x3e, 0xaa, 0xbf, 0x52, 0xd3, 0x2e, 0x08, 0xda, 0x95, 0xfe, 0xb6,
    0x44, 0x78, 0x64, 0x45, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b, 0x06, 0x01, 0x04,
    0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0x1d, 0x8c, 0xac, 0x46, 0x47,
    0xa1, 0x33, 0x86, 0xaf, 0x50, 0xe8, 0x8a, 0xe4, 0x6f, 0xe8, 0x02, 0x30, 0x0c, 0x06, 0x03, 0x55,
    0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48,
    0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21, 0x00, 0xc6, 0x8a, 0xf1,
    0xf7, 0x9a, 0x87, 0x7a, 0xe1, 0xb5, 0xc5, 0x0b, 0x2f, 0xd2, 0x0a, 0xd5, 0x03, 0xf1, 0xe2, 0x3f,
    0xbc, 0x88, 0x0a, 0x97, 0xd4, 0xf7, 0xb9, 0x17, 0x55, 0x5c, 0x27, 0xc5, 0xb3, 0x02, 0x20, 0x6a,
    0xdd, 0xe5, 0x8d, 0x46, 0x98, 0x45, 0x1f, 0x13, 0x80, 0x02, 0x44, 0xb8, 0x5d, 0x14, 0x12, 0x9f,
    0x82, 0xab, 0x10, 0x58, 0xab, 0x38, 0x9d, 0x7c, 0x1b, 0x6b, 0xde, 0xd3, 0x81, 0x02, 0xe0};

/* U2F TEST env */
static const uint8_t TEST_U2F_FLEX_ATTESTATION_KEY[] = {
    0xd2, 0xa4, 0x23, 0x1f, 0xff, 0xf0, 0x38, 0x49, 0xdf, 0xe9, 0x95, 0xaa, 0x50, 0x87, 0xf7, 0x4c,
    0x2c, 0x02, 0xc5, 0x16, 0x92, 0x0d, 0xf1, 0x5a, 0xc3, 0x4e, 0xdc, 0x81, 0x48, 0x04, 0x8a, 0x28};
static const uint8_t TEST_U2F_FLEX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xcf, 0x30, 0x82, 0x01, 0x75, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x33,
    0x61, 0x56, 0xf5, 0x2d, 0xd6, 0x04, 0xc0, 0xe3, 0x6e, 0x34, 0x9d, 0x93, 0xda, 0x81, 0x99, 0x3e,
    0xbd, 0xdc, 0x52, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x34, 0x30, 0x35, 0x31, 0x36, 0x31, 0x32,
    0x35, 0x31, 0x31, 0x36, 0x5a, 0x17, 0x0d, 0x33, 0x34, 0x30, 0x35, 0x31, 0x34, 0x31, 0x32, 0x35,
    0x31, 0x31, 0x36, 0x5a, 0x30, 0x73, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x26, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x46,
    0x49, 0x44, 0x4f, 0x20, 0x31, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0xf2, 0xb0, 0xcc, 0xf2, 0x6b, 0x9b, 0xae, 0x9b, 0x29, 0x5a, 0x63, 0xa9,
    0x7e, 0x01, 0xd5, 0x90, 0x0c, 0xb7, 0xfd, 0xb0, 0x7d, 0x8b, 0xe6, 0x46, 0x81, 0xfc, 0x84, 0x2f,
    0x15, 0x58, 0x89, 0x31, 0xf4, 0x5f, 0xd2, 0x45, 0xea, 0x04, 0x90, 0x7c, 0x2f, 0xd9, 0x81, 0xb4,
    0xa8, 0x65, 0x86, 0xf3, 0x2c, 0x0c, 0xb8, 0x36, 0xc4, 0xd3, 0x91, 0x98, 0x90, 0x9a, 0xab, 0x8e,
    0xc1, 0x08, 0xb6, 0xb3, 0xa3, 0x17, 0x30, 0x15, 0x30, 0x13, 0x06, 0x0b, 0x2b, 0x06, 0x01, 0x04,
    0x01, 0x82, 0xe5, 0x1c, 0x02, 0x01, 0x01, 0x04, 0x04, 0x03, 0x02, 0x04, 0x30, 0x30, 0x0a, 0x06,
    0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x21,
    0x00, 0xfd, 0xde, 0x13, 0x0a, 0x07, 0x61, 0x81, 0x2d, 0x9c, 0x69, 0x23, 0x3f, 0x9d, 0x9e, 0x3f,
    0xf2, 0x6d, 0xb7, 0x86, 0x8c, 0xa1, 0x63, 0x8d, 0xc0, 0x4f, 0xde, 0xd5, 0x1f, 0xd4, 0x56, 0x0c,
    0x45, 0x02, 0x20, 0x72, 0x63, 0x8f, 0x13, 0x14, 0x9a, 0x3f, 0x90, 0x55, 0x82, 0x4a, 0xfc, 0x75,
    0x82, 0xc1, 0x62, 0x7a, 0x2e, 0x8e, 0x7e, 0xea, 0xaa, 0xf4, 0xeb, 0x7a, 0xcd, 0x6b, 0xe5, 0x88,
    0x94, 0xce, 0x53};

/* FIDO2 TEST env */
static const uint8_t TEST_FIDO2_FLEX_ATTESTATION_KEY[] = {
    0x06, 0x60, 0x95, 0x28, 0x0e, 0x32, 0xbf, 0x5b, 0xee, 0xd3, 0xbd, 0x5e, 0xb9, 0x5d, 0xe9, 0x3c,
    0x62, 0x11, 0x63, 0xe9, 0x22, 0x0d, 0xe1, 0xcb, 0x01, 0x69, 0x5c, 0xee, 0xeb, 0xa0, 0x00, 0xca};
static const uint8_t TEST_FIDO2_FLEX_ATTESTATION_CERT[] = {
    0x30, 0x82, 0x01, 0xeb, 0x30, 0x82, 0x01, 0x91, 0xa0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x14, 0x4a,
    0x0b, 0x8e, 0x86, 0xa0, 0x20, 0x22, 0x32, 0x3f, 0x3a, 0x93, 0x82, 0xc8, 0x6a, 0x5a, 0x14, 0xf4,
    0x99, 0x34, 0x47, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
    0x43, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x46, 0x52, 0x31, 0x0f,
    0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x31,
    0x23, 0x30, 0x21, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x1a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72,
    0x20, 0x46, 0x49, 0x44, 0x4f, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x43, 0x41, 0x30, 0x1e, 0x17, 0x0d, 0x32, 0x34, 0x30, 0x35, 0x31, 0x36, 0x31, 0x32,
    0x35, 0x31, 0x32, 0x34, 0x5a, 0x17, 0x0d, 0x33, 0x34, 0x30, 0x35, 0x31, 0x34, 0x31, 0x32, 0x35,
    0x31, 0x32, 0x34, 0x5a, 0x30, 0x73, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13,
    0x02, 0x46, 0x52, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x06, 0x4c, 0x65,
    0x64, 0x67, 0x65, 0x72, 0x31, 0x22, 0x30, 0x20, 0x06, 0x03, 0x55, 0x04, 0x0b, 0x0c, 0x19, 0x41,
    0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x41, 0x74, 0x74,
    0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x31, 0x2f, 0x30, 0x2d, 0x06, 0x03, 0x55, 0x04,
    0x03, 0x0c, 0x26, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x20, 0x46, 0x6c, 0x65, 0x78, 0x20, 0x46,
    0x49, 0x44, 0x4f, 0x20, 0x32, 0x20, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
    0x6e, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x31, 0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a,
    0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07,
    0x03, 0x42, 0x00, 0x04, 0x7d, 0xd2, 0xa3, 0x4b, 0xa4, 0xda, 0x7d, 0x46, 0x8c, 0x7c, 0x89, 0xb2,
    0xf0, 0xcd, 0xcb, 0x7a, 0xc4, 0xc2, 0xc4, 0x0b, 0xe6, 0xf8, 0x5a, 0x7f, 0x23, 0x98, 0xfe, 0xd7,
    0x67, 0x4f, 0xd8, 0x22, 0xa2, 0x91, 0x73, 0x49, 0xb4, 0x36, 0xce, 0x2e, 0x5d, 0xe0, 0xd7, 0xca,
    0x2e, 0x99, 0xd7, 0x08, 0x0e, 0x53, 0x43, 0x75, 0x7e, 0xf7, 0x09, 0xfe, 0x8d, 0x70, 0xd7, 0xa2,
    0xdf, 0x2a, 0xeb, 0x03, 0xa3, 0x33, 0x30, 0x31, 0x30, 0x21, 0x06, 0x0b, 0x2b, 0x06, 0x01, 0x04,
    0x01, 0x82, 0xe5, 0x1c, 0x01, 0x01, 0x04, 0x04, 0x12, 0x04, 0x10, 0x1d, 0x8c, 0xac, 0x46, 0x47,
    0xa1, 0x33, 0x86, 0xaf, 0x50, 0xe8, 0x8a, 0xe4, 0x6f, 0xe8, 0x02, 0x30, 0x0c, 0x06, 0x03, 0x55,
    0x1d, 0x13, 0x01, 0x01, 0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48,
    0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45, 0x02, 0x20, 0x0a, 0x3a, 0x0f, 0xd9,
    0xed, 0x7c, 0x27, 0x9c, 0xff, 0x20, 0xe7, 0x2f, 0x9f, 0x9f, 0x0c, 0xcc, 0x1d, 0xa2, 0xe7, 0x63,
    0xc0, 0xc5, 0xfc, 0x30, 0x23, 0xcb, 0x84, 0x90, 0xe4, 0x7a, 0xf6, 0xdf, 0x02, 0x21, 0x00, 0x89,
    0x69, 0xa3, 0x26, 0x81, 0xd3, 0x32, 0x0e, 0xeb, 0x81, 0x47, 0x2e, 0x43, 0x72, 0x71, 0x81, 0xaa,
    0xdb, 0x77, 0x0a, 0xc8, 0x4c, 0xb6, 0x8a, 0x98, 0x54, 0xa8, 0x7a, 0x41, 0x1c, 0x60, 0xdf};

/******************************************/
/*      Target attestation definition     */
/******************************************/

#if defined(TARGET_NANOS)
#if defined(PROD_U2F_NANOS_PRIVATE_KEY) && defined(PROD_FIDO2_NANOS_PRIVATE_KEY)
#warning Using prod keys to build on TARGET_NANOS
#define ATTESTATION_KEY        PROD_U2F_NANOS_ATTESTATION_KEY
#define ATTESTATION_CERT       PROD_U2F_NANOS_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  PROD_FIDO2_NANOS_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT PROD_FIDO2_NANOS_ATTESTATION_CERT
#else
#define ATTESTATION_KEY        TEST_U2F_NANOS_ATTESTATION_KEY
#define ATTESTATION_CERT       TEST_U2F_NANOS_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  TEST_FIDO2_NANOS_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT TEST_FIDO2_NANOS_ATTESTATION_CERT
#endif
#endif

#if defined(TARGET_NANOX)
#if defined(PROD_U2F_NANOX_PRIVATE_KEY) && defined(PROD_FIDO2_NANOX_PRIVATE_KEY)
#warning Using prod keys to build on TARGET_NANOX
#define ATTESTATION_KEY        PROD_U2F_NANOX_ATTESTATION_KEY
#define ATTESTATION_CERT       PROD_U2F_NANOX_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  PROD_FIDO2_NANOX_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT PROD_FIDO2_NANOX_ATTESTATION_CERT
#else
#define ATTESTATION_KEY        TEST_U2F_NANOX_ATTESTATION_KEY
#define ATTESTATION_CERT       TEST_U2F_NANOX_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  TEST_FIDO2_NANOX_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT TEST_FIDO2_NANOX_ATTESTATION_CERT
#endif
#endif

#if defined(TARGET_NANOS2)
#if defined(PROD_U2F_NANOSP_PRIVATE_KEY) && defined(PROD_FIDO2_NANOSP_PRIVATE_KEY)
#warning Using prod keys to build on TARGET_NANOS2
#define ATTESTATION_KEY        PROD_U2F_NANOSP_ATTESTATION_KEY
#define ATTESTATION_CERT       PROD_U2F_NANOSP_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  PROD_FIDO2_NANOSP_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT PROD_FIDO2_NANOSP_ATTESTATION_CERT
#else
#define ATTESTATION_KEY        TEST_U2F_NANOSP_ATTESTATION_KEY
#define ATTESTATION_CERT       TEST_U2F_NANOSP_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  TEST_FIDO2_NANOSP_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT TEST_FIDO2_NANOSP_ATTESTATION_CERT
#endif
#endif

#if defined(TARGET_STAX)
#if defined(PROD_U2F_STAX_PRIVATE_KEY) && defined(PROD_FIDO2_STAX_PRIVATE_KEY)
#warning Using prod keys to build on TARGET_STAX
#define ATTESTATION_KEY        PROD_U2F_STAX_ATTESTATION_KEY
#define ATTESTATION_CERT       PROD_U2F_STAX_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  PROD_FIDO2_STAX_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT PROD_FIDO2_STAX_ATTESTATION_CERT
#else
#define ATTESTATION_KEY        TEST_U2F_STAX_ATTESTATION_KEY
#define ATTESTATION_CERT       TEST_U2F_STAX_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  TEST_FIDO2_STAX_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT TEST_FIDO2_STAX_ATTESTATION_CERT
#endif
#endif

#if defined(TARGET_FLEX)
#if defined(PROD_U2F_FLEX_PRIVATE_KEY) && defined(PROD_FIDO2_FLEX_PRIVATE_KEY)
#warning Using prod keys to build on TARGET_FLEX
#define ATTESTATION_KEY        PROD_U2F_FLEX_ATTESTATION_KEY
#define ATTESTATION_CERT       PROD_U2F_FLEX_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  PROD_FIDO2_FLEX_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT PROD_FIDO2_FLEX_ATTESTATION_CERT
#else
#define ATTESTATION_KEY        TEST_U2F_FLEX_ATTESTATION_KEY
#define ATTESTATION_CERT       TEST_U2F_FLEX_ATTESTATION_CERT
#define FIDO2_ATTESTATION_KEY  TEST_FIDO2_FLEX_ATTESTATION_KEY
#define FIDO2_ATTESTATION_CERT TEST_FIDO2_FLEX_ATTESTATION_CERT
#endif
#endif
