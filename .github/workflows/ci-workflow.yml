name: Compilation & tests

on:
  workflow_dispatch:
  pull_request:

jobs:
  app_build:
    name: Build app
    strategy:
      matrix:
        sdk:
        - path: $NANOS_SDK
          name: nanos
        - path: $NANOX_SDK
          name: nanox
        - path: $NANOSP_SDK
          name: nanosp
          build_arg: "WERROR=0"

    runs-on: orange-classic
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest

    steps:
      - name: Clone
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e

      - name: Patch SDK
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git -C ${{ matrix.sdk.path }} am $PWD/sdk-patch/*

      - name: Build
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          make BOLOS_SDK=${{ matrix.sdk.path }} ${{ matrix.sdk.build_arg }}
          cp bin/app.elf bin/u2f_${{ matrix.sdk.name }}.elf

      - name: Upload app binary
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: u2f_binaries
          path: ./bin/u2f_${{ matrix.sdk.name }}.elf
          if-no-files-found: error

  job_scan_build:
    name: Clang Static Analyzer
    runs-on: orange-classic
    container:
      image: ghcr.io/ledgerhq/ledger-app-builder/ledger-app-builder-lite:latest

    steps:
      - name: Clone
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e

      - name: Patch SDK
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git -C $BOLOS_SDK am $PWD/sdk-patch/*

      - name: Build with Clang Static Analyzer
        run: |
          make clean
          scan-build --use-cc=clang -analyze-headers -enable-checker security -enable-checker unix -enable-checker valist -o scan-build --status-bugs make default

      - name: Upload scan result
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        if: failure()
        with:
          name: scan-build
          path: scan-build

  speculos_test:
    name: Speculos tests
    strategy:
      matrix:
        include:
          - model: nanos

          - model: nanox
            args: "--fast"

          - model: nanosp
            args: "--fast"

          - model: nanos
            args: "--transport HID --fast"

    needs:
      - app_build

    runs-on: orange-classic
    container:
      image: ghcr.io/ledgerhq/speculos:latest

    steps:
      - name: Clone
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e

      - name: Download all binaries
        uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869

      - name: Gather artifacts
        run: |
          mkdir tests/elfs
          mv *_binaries/*.elf tests/elfs

      - name: Install APT dependencies
        run: apt-get update && apt-get install -y gcc

      - name: Install tests dependencies
        run: |
          pip install --extra-index-url https://test.pypi.org/simple/ -r tests/speculos/requirements.txt

      - name: Run test
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: |
          unset HTTP_PROXY
          unset HTTPS_PROXY
          unset http_proxy
          unset https_proxy
          pytest tests/speculos/ -v --device ${{ matrix.model }} ${{ matrix.args }}
