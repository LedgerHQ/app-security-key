name: Build and run functional tests using ragger through reusable workflow

# This workflow will build the app and then run functional tests using the Ragger framework upon Speculos emulation.
# It calls a reusable workflow developed by Ledger's internal developer team to build the application and upload the
# resulting binaries.
# It then calls another reusable workflow to run the Ragger tests on the compiled application binary.
#
# While this workflow is optional, having functional testing on your application is mandatory and this workflow and
# tooling environment is meant to be easy to use and adapt after forking your application

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
# Cancel previous runs on this reference
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_application:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: compiled_app_binaries

  build_application_rk_ui:
    name: Build application using the reusable workflow with ENABLE_RK_CONFIG_UI_SETTING
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: compiled_app_binaries_rk_ui
      flags: 'ENABLE_RK_CONFIG_UI_SETTING=1'

  build_application_nfc_u2f:
    name: Build application using the reusable workflow with ENABLE_NFC_U2F_TESTS
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@v1
    with:
      upload_app_binaries_artifact: compiled_app_binaries_nfc_u2f
      flags: 'ENABLE_U2F_OVER_FAKE_NFC_TESTS=1'

  tests:
    needs: build_application
    name: Ragger tests
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries

  tests_rk:
    needs: build_application_rk_ui
    name: Ragger tests with ENABLE_RK_CONFIG_UI_SETTING
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries_rk_ui
      test_options: '--rk-config-ui'

  tests_nfc:
    needs: build_application
    name: Ragger NFC tests
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries
      run_for_devices: '["stax", "flex"]'
      test_options: '--transport NFC'

  tests_hid:
    needs: build_application
    name: Ragger HID tests
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries
      run_for_devices: '["nanox"]'
      test_options: '--transport HID'

  tests_okta:
    needs: build_application
    name: Ragger OKTA tests
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries
      run_for_devices: '["flex"]'
      test_options: '--okta'
    secrets:
      secret_test_options: '--okta-token "${{ secrets.OKTA_TEST_TOKEN }}" --okta-email "${{ secrets.OKTA_TEST_EMAIL }}" --okta-url "${{ secrets.OKTA_TEST_URL }}"'

  tests_nfc_u2f:
    needs: build_application_nfc_u2f
    name: Ragger tests with ENABLE_NFC_U2F_TESTS
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@v1
    with:
      download_app_binaries_artifact: compiled_app_binaries_nfc_u2f
      test_filter: 'test_make_credential_followed_u2f'
      test_options: '--transport HID --u2f-over-fake-nfc'
